{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset128 Times New Roman;}{\f1\fswiss\fprq0\fcharset0 Arial;}{\f2\fswiss\fprq2\fcharset128 Arial;}{\f3\fswiss\fprq0\fcharset0 Arial;}{\f4\fmodern\fprq1\fcharset0 Courier New;}{\f5\froman\fprq0\fcharset0 Times New Roman;}{\f6\froman\fprq2\fcharset128 Times New Roman;}{\f7\fnil\fprq2\fcharset128 DejaVu Sans;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af7\afs28\lang255\ltrch\dbch\af7\langfe255\hich\f2\fs28\lang1033\loch\f2\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ai\ltrch\dbch\af5\langfe255\hich\f5\fs24\lang1033\i\loch\f5\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033\sbasedon1\snext6 Index;}
{\s7\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 1;}
{\s8\li1440\ri0\lin1440\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 2;}
{\s9\li2160\ri0\lin2160\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 3;}
{\s10\li2880\ri0\lin2880\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 4;}
{\s11\cf0\tx431{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon12\snext1 Numbered Heading 1;}
{\s12\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs34\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs34\lang1033\b\loch\f1\fs34\lang1033\b\sbasedon1\snext1 heading 1;}
{\s13\cf0\tx431{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon14\snext1 Numbered Heading 2;}
{\s14\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs28\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b\sbasedon1\snext1 heading 2;}
{\s15\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Square List;}
{\s16\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 Lower Roman List;}
{\s17\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Diamond List;}
{\s18\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Numbered List;}
{\s19\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Triangle List;}
{\s20\cf0\tx431{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon21\snext1 Numbered Heading 3;}
{\s21\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b\sbasedon1\snext1 heading 3;}
{\s22\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Dashed List;}
{\s23\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon18\snext1 Upper Roman List;}
{\s24\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b\sbasedon1\snext1 heading 4;}
{\s25\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Heart List;}
{\s26\sb240\sa119\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs32\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs32\lang1033\b\loch\f1\fs32\lang1033\b\sbasedon1\snext1 Contents Header;}
{\s27\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon18\snext1 Upper Case List;}
{\s28\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Bullet List;}
{\s29\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Hand List;}
{\s30\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Tick List;}
{\s31\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon18\snext1 Lower Case List;}
{\s32\li1440\ri1440\lin1440\rin1440\fi0\sa119\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 Block Text;}
{\s33\cf0\tx1584{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon11\snext1 Section Heading;}
{\s34\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Implies List;}
{\s35\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Box List;}
{\s36\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Star List;}
{\s37\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af4\afs24\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs24\lang1033\loch\f4\fs24\lang1033\sbasedon1\snext1 Plain Text;}
{\s38\cf0\tx1584{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon11\snext1 Chapter Heading;}
{\*\cs40\cf0\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 Endnote Symbol;}
{\*\cs41\cf0\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon42 Endnote Text;}
{\*\cs42\cf0\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs24\lang1033\loch\f5\fs24\lang1033 Normal;}
{\*\cs43\cf0\rtlch\af1\afs20\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033 Reference;}
{\*\cs44\cf0\rtlch\af1\afs20\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033 WW-Reference;}
{\*\cs45\cf0\rtlch\af1\afs20\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033\sbasedon42 Footnote Text;}
{\*\cs46\cf0\rtlch\af1\afs20\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033 WW-Reference1;}
}
{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3100}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Standard;}
{\pgdsc1\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt1 Endnote;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnar
\pard\plain \ltrpar\s12\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs34\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs34\lang1033\b\loch\f1\fs34\lang1033\b {\rtlch \ltrch\loch\f1\fs34\lang1033\i0\b Manual }
\par \pard\plain \ltrpar\s12\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs34\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs34\lang1033\b\loch\f1\fs34\lang1033\b {\rtlch \ltrch\loch\f1\fs34\lang1033\i0\b Monitor v 0.1}
\par \pard\plain \ltrpar\s14\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs28\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b {\rtlch \ltrch\loch\f1\fs28\lang1033\i0\b Installation}
\par \pard\plain \ltrpar\s21\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Telnet perfmon server}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Telnet perfmon server is a small server application, currently configured as a command line tool, that collects perfmon metrics from windows hosts. Telnet perfmon server ought to collect metrics from multiple hosts, but is easier to configure for local hos
ts. That is, it's easier to run an instance of the server on each host, than running a single centralized. It has to be executed by a user account that is allowed to collect perfmon metrics of each host.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The Telnet perfmon server require .NET 3.5 Runtime, which can be downloaded from: }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 http://www.microsoft.com/downloads/details.aspx?FamilyID=333325fd-ae52-4e35-b531-508d977d32a6}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Telnet perfmon server does also utilize IronPython for scripting purposes. Advanced scripting ought to require python runtime libraries that require installation of IronPython itself. IronPython can be obtained at:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 http://ironpython.codeplex.com/releases/view/12482#DownloadId=96606}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The perfmon telnet server consists of the following binaries, where test.py is an example configuration:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 IronPython.dll\line IronPython.Modules.dll\line Microsoft.Dynamic.dll\line Microsoft.Scripting.Core.dll\line Microsoft.Scripting.Debugging.dll\line Microsoft.Scripting.dll\line Microsoft.Scripting.ExtensionAttribute.dll\line TelnetPerfmonServer.exe\line test.py}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 These files does not need to be installed, and can be copied to a suitable directory.}
\par \pard\plain \ltrpar\s21\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The Monitor software is self contained and contains only the monitor.jar and a configuration file. An example configuration conf1.clj is provided. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Monitor require at least Java SE 6, which can be downloaded from:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs24\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs21\lang1033\loch\f4\fs21\lang1033{\rtlch \ltrch\loch\f4\fs21\lang1033\i0\b0\rtlch\ltrch\hich\fs16\loch\fs16 http://java.sun.com/javase/downloads/widget/jdk6.jsp}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The Monitor stores data in a database, consisting of a file system directory. A clean installation means that the directory is empty.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The database location is specified in the configuration file, as an  argument to the using-history function: Eg. The following line instructs the monitor to use /home/stefan/testdb directory as a database on a Unix file system.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (using-history "/home/stefan/testdb"}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 On a windows host, the equivalent specification would be: }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (using-history "C:\\Documents and Settings\\stefan\\testdb"}
\par \pard\plain \ltrpar\s14\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs28\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b {\rtlch \ltrch\loch\f1\fs28\lang1033\i0\b Usage}
\par \pard\plain \ltrpar\s21\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Telnet perfmon server}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Telenet perfmon server is a server software, that do not offer any user interaction, other than a telnet interface, used by Monitor. There are however a configuration script and command line options needed during startup.}
\par \pard\plain \ltrpar\s24\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Script}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The configuration script has two global associative maps, hosts and credentials. The host map consists of host names mapped each mapped to regular expressions, and is used to define the categories of interest for any particular host. The following lines in
structs the server to retrieve Process and PhysicalDisk categories from local host:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 from System.Text.RegularExpressions import Regex}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 from System import Environment}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 hosts.Add(Environment.MachineName, Regex("Process|PhysicalDisk"))}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The first two lines above imports .NET classes needed to make the call in the third line.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex36\picscaley30\piccropl0\piccropr0\piccropt0\piccropb0\picw577\pich486\picwgoal11540\pichgoal9720\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex36\picscaley30\piccropl0\piccropr0\piccropt0\piccropb0\picw577\pich486\picwgoal11540\pichgoal9720\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Perfmon categories can be obtained using the perfmon.exe program. Image above shows the steps taken.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The credentials map contain mappings of credentials needed to access perfmon categories from remote hosts. Credentials is normally not required on local host. That is, when the server is started with a user that is allowed to use perfmon. The following lin
e sets credential of using local host. Replace "Environment.MachineName" to name of the host, like e.g. "localhost"}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 import clr\line clr.AddReference("TelnetPerfmonServer")\line from PerformanceTools.TelnetPerfmonServer import Credentials\line credentials.Add(Environment.MachineName, Credentials("adm","dom", "pass"))}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The first two lines adds the Telnet Performance Server itself to the scripting environment, in which the Credentials class is. The third line adds adm as user, pass as password for the domain dom, used while fetching statistics from local host.}
\par \pard\plain \ltrpar\s24\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Command line}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The Telnet perfmon server is started with the parameters: port interval configuration, where port is the listener port where metrics are available, interval is the polling interval where perfmon categories are retrieved, and configuration is the path to th
e configuration file.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 An example would be:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 TelnetPerfmonServer.exe 3434 15 test.py}
\par \pard\plain \ltrpar\s21\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The monitor binary consists of both the client and the server programs. The client is used to connect to the server, which is collecting and storing metrics from defined processes. The client visualizes the data according to the user. The client is started
 by simply clicking on the monitor.jar file from within the explorer or by running the command:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 java -jar monitor.jar}
\par \pard\plain \ltrpar\s24\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Server}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The server is started by adding "server" to the command line, followed by the name of the configuration script. The configuration script is assumed to be located in the same directory as the monitor.jar file.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The configuration script is a clojure program, which starts the server with a set of functions supplied. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Following is an example of a configuration, which collects perfmon data, CPU Utilization, from the servers mssj022 and ladmi2338, as well as common Java 6 metrics from the local process, and a process called Java2D on ladmi2338. The Java2D process exposes 
its internals through jmx bound to port 3031. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (ns conf1\line   (:use (se.sj.monitor database jmxcollection server clientif logger))\line   (:use [se.sj.monitor.perfmonservice :only (perfmon-connection)]))\line \line (defn sleepSeconds [interval stop-signal]\line   (when (not @stop-signal)\line     (try\line      (Thread/sleep (* interv
al 1000))\line      (catch InterruptedException e))))\line (using-logger\line  (using-history "/home/stefan/testdb"\line \tab (let [interval 15]\line \tab   (serve-clients 0 3033 #(deref stop-signal)\line \tab \tab \tab  (serve [(fn [] (jmx-java6 (fn [] \line \tab \tab \tab \tab \tab \tab      (sleepSeconds interval stop-signal)\line \tab \tab \tab \tab 
\tab \tab      @stop-signal)))\line \tab \tab \tab \tab  ({\*\bkmkstart DDE_LINK}fn [] (jmx-java6 "Java2D" \line \tab \tab \tab \tab \tab \tab    "ladmi2338" \line \tab \tab \tab \tab \tab \tab    3031 \line \tab \tab \tab \tab \tab \tab    (fn [] \line \tab \tab \tab \tab \tab \tab      (sleepSeconds interval stop-signal)\line \tab \tab \tab \tab \tab \tab      @stop-signal))){\*\bkmkend DDE_LINK}\line \tab \tab \tab \tab  (perfmon-connection "mssj022" \line \tab \tab \tab \tab \tab \tab      3434 \line \tab \tab \tab \tab \tab \tab      (fn []  
@stop-signal) \line \tab \tab \tab \tab \tab \tab      ".*" "Processor" ".*User Time" ".*")\line \tab \tab \tab \tab  (perfmon-connection "ladmi2338" \line \tab \tab \tab \tab \tab \tab      3434 \line \tab \tab \tab \tab \tab \tab      (fn []  @stop-signal) \line \tab \tab \tab \tab \tab \tab      ".*" "Processor" ".*User Time" ".*")\tab \tab \tab \tab \line \tab \tab \tab \tab  (fn [] (while (not @stop-signal)\line \tab \tab \tab \tab \tab        (t
ry (Thread/sleep 30000)\line \tab \tab \tab \tab \tab \tab     (catch InterruptedException _))\line \tab \tab \tab \tab \tab        (clean-live-data-older-than \line \tab \tab \tab \tab \tab \tab (java.util.Date. (- (System/currentTimeMillis) \line \tab \tab \tab \tab \tab \tab \tab \tab     (* 1000 60 60))))))])))))}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The first section of the code is the name space declaration, which also include imports of required functionality. The first line contains the name of this name space, which here is conf1. This name should be the same as the name of the configuration file,
 excluding the ".clj" extension. The rest of the name space declaration is not supposed to change.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (ns conf1\line   (:use (se.sj.monitor database jmxcollection server clientif logger))\line   (:use [se.sj.monitor.perfmonservice :only (perfmon-connection)]))}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The next section defines the function sleepSeconds, which is used further down the configuration. This function simply sleeps the calling thread for interval number of seconds, unless it is interrupted or the atomic stop-signal is set. This function is sup
posed to remain unchanged. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (defn sleepSeconds [interval stop-signal]\line   (when (not @stop-signal)\line     (try\line      (Thread/sleep (* interval 1000))\line      (catch InterruptedException e))))}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The following section enables the environment in which the data collection occur.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (using-logger\line  (using-history "/home/stefan/testdb"\line \tab (let [interval 15]\line \tab   (serve-clients 0 3033 #(deref stop-signal)}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\f4\fs16\loch\f4\fs16 using-logger}}{\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\f5\loch\f5  is a macro, from which all forms has access to logging. The macro }{\rtlch\ltrch\dbch\hich\f4\fs16\loch\f4\fs16 using-history "/home/stefan/testdb"}{\rtlch\ltrch\dbch\hich\f5\loch\f5  instructs the monitor to save collected data in the database in the directory testdb at /home/stefan.}}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033{\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\f4\fs16\loch\f4\fs16 (serve-clients 0 3033 #(deref stop-signal) }}{\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\f5\loch\f5 is yet another macro that tells the monitor to serve clients at TCP port 3033, until the atomic stop-signal is set.}}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The rest of the configuration is definitions of the metrics to collect. First is two definitions of collecting java 6 centric jmx metrics. The first jmx-java6 form defines collection of jmx metrics from the local process, and is hence lacking address and p
ort specification, while the other jmx-java6 form defines collection from a remote process found on host ladmi2338 port 3031. The process is referred to as Java2D, to pick a name as any. Both processes will be polled every 15 seconds, as defined earlier in
 the script. The first form is not of great any interest in a production like environment, where second form is more likely to be used.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (serve [(fn [] (jmx-java6 (fn [] \line \tab \tab \tab      (sleepSeconds interval stop-signal)\line \tab \tab \tab \tab \tab \tab      @stop-signal)))\line \tab  (fn [] (jmx-java6 "Java2D" \line \tab                     "ladmi2338" \line \tab \tab \tab      3031 \line \tab \tab \tab      (fn [] \line \tab \tab \tab        (sleepSeconds interval stop-signal)\line \tab \tab \tab \tab      @
stop-signal)))}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Following these forms are forms defining collection of perfmon metrics through the telnet perfmon servers. The two forms are very similar and differ only in the address. The first is collecting perfmon metrics from mssj022 at port 3434, while the other col
lect from ladmi2338 at port 3434.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (perfmon-connection "mssj022" \line \tab \tab \tab 3434 \line \tab \tab \tab (fn []  @stop-signal) \line \tab \tab \tab    ".*" "Processor" ".*User Time" ".*")\line (perfmon-connection "ladmi2338" \line    \tab \tab        3434 \line \tab \tab \tab (fn []  @stop-signal) \line \tab \tab \tab    ".*" "Processor" ".*User Time" ".*")}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The last form is also intended to remain unchanged. It defines how old live data is intended to get. Here every 30 seconds, live data older than an hour is wasted. Live data is data the metrics shown in the runtime view.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 (fn [] (while (not @stop-signal)\line      (try (Thread/sleep 30000)\line       (catch InterruptedException _))\line      (clean-live-data-older-than \line \tab (java.util.Date. (- (System/currentTimeMillis) \line \tab     (* 1000 60 60))))))])))))}
\par \pard\plain \ltrpar\s24\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b User interface}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The user interface is started by running java -jar monitor, or by simply clicking on the monitor.jar in the file explorer. At start up a analysis window is opened.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex35\picscaley40\piccropl0\piccropr0\piccropt0\piccropb0\picw688\pich478\picwgoal13760\pichgoal9560\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex35\picscaley40\piccropl0\piccropr0\piccropt0\piccropb0\picw688\pich478\picwgoal13760\pichgoal9560\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The analysis window consists of an empty graph and a empty table, since no data has yet been selected. To connect to the server, you simply chose Connect from the File menu, which brings up the following form, in which you enter the address to the monitor 
server of interest.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex42\picscaley40\piccropl0\piccropr0\piccropt0\piccropb0\picw399\pich277\picwgoal7980\pichgoal5539\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex42\picscaley40\piccropl0\piccropr0\piccropt0\piccropb0\picw399\pich277\picwgoal7980\pichgoal5539\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Once connected, you select the fill the graph by selecting Add in the File menu, which brings up a form where you can select data to analyze. First you select the time span containing data of interest. After update has been pressed, the available selection
 criterias for this period shows up. Below is an example where Garbage collection statistics of a process using the Parallel Scavenge Collector is being selected.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex36\picscaley38\piccropl0\piccropr0\piccropt0\piccropb0\picw425\pich345\picwgoal8500\pichgoal6900\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex36\picscaley38\piccropl0\piccropr0\piccropt0\piccropb0\picw425\pich345\picwgoal8500\pichgoal6900\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Note that the criteria available is dependent of both the time span, and the criteria currently selected. Here the instance criteria is only showing values available to garbage collection. That is how much memory that was used for a certain generation dire
ctly after the last GC. After pressing the Add button. the corresponding graphs should appear.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex33\picscaley40\piccropl0\piccropr0\piccropt0\piccropb0\picw688\pich476\picwgoal13760\pichgoal9519\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex33\picscaley40\piccropl0\piccropr0\piccropt0\piccropb0\picw688\pich476\picwgoal13760\pichgoal9519\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Here memory utilization of eden space before and after the last GC, together with sampled snapshots. Eden space is obviously emptied on each collection, which is the desired behavior. The process has not been up and running for more than 2 hours in this ex
ample.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 You can zoom the graph by using the cursor, and remove functions from the table.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The following picture shows the same data in the runtime view, which is updated automatically, but only shows the last hour statistics. A runtime view is opened in the File menu. The add form for a runtime view is similar but is lacking the time span.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex39\picscaley37\piccropl0\piccropr0\piccropt0\piccropb0\picw765\pich384\picwgoal15300\pichgoal7679\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex39\picscaley37\piccropl0\piccropr0\piccropt0\piccropb0\picw765\pich384\picwgoal15300\pichgoal7679\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The criteria available is dependent of what the server is configured to collect, which in turn is dependent of e.g. the Telnet Perfmon Servers are configured to collect. The analysis view will only show the criteria available for the selected time span, wh
ile runtime view will only show criteria available during the last hour. The Java 6 JMX related criteria differ from JVM to JVM. Different Garbage collectors does e.g. produce different statistics.}
\par \pard\plain \ltrpar\s21\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Configuring Perfmon}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Perfmon on windows works with categories, which in turn contain counters and instances. Each time a sample is taken from the OS, a whole category sample is taken. The categories available  differ from host to host. Some categories are very large. E.g. the 
Threading category, since a system most often have a lot of threads.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The first step in configuring Perfmon collection is to instruct the Telnet Perfmon Server which Categories to collect. This is done with a regular expression in the Telnet Perfmon Server configuration file, using the hosts map. The following expression oug
ht to collect Process and PhysicalDisk categories from localhost on most Windows host.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 hosts.Add(Environment.MachineName, Regex("Process$|PhysicalDisk"))}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The above expression does not match the Processor category, due to the end of line token, $.The following expression ought to collect Processor, PhysicalDisk and LogicalDisk, from localhost. }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 hosts.Add(Environment.MachineName, Regex("Processor|Disk"))}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The next step is to instruct the Monitor server to collect perfmon data. This is done in the server configuration file. Configuration perfmon data is also done by filtering with regular expressions.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 The following expression instructs the server to collect data from the Telnet Perfmon Server residing on mssj022 at TCP port 3434. The line contains 4 regular expressions specifying host, category, counter and instance. Here we match all hosts that this Pe
rfmon Telnet Server is collecting from, the "Processor" category, all counters ending with "User Time", and all instances.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 \tab  (perfmon-connection "mssj022" \line \tab \tab      3434 \line \tab \tab      (fn []  @stop-signal) \line \tab \tab      ".*" "Processor" ".*User Time" ".*")}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 This expressions would match a selection in the perfmon program like:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs24\lang255\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex43\picscaley41\piccropl0\piccropr0\piccropt0\piccropb0\picw435\pich402\picwgoal8700\pichgoal8039\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex43\picscaley41\piccropl0\piccropr0\piccropt0\piccropb0\picw435\pich402\picwgoal8700\pichgoal8039\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200001000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql{\rtlch \ltrch\loch\f6\fs24\lang1033\i0\b0\rtlch\ltrch\dbch Use perfmon when figuring out which metrics to collect.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 While adding more perfmon metrics to your system, you need to write more and more advanced regular expressions that filter out data of interest. The monitor server saves all data collected, and you don't want to fill your database with huge amounts of non 
interesting data. This can be complicated, since different categories might contain counters and instances with same or similar names. It is possible to use multiple perfmon-connections to the same Telnet Perfmon Server. This consumes resources, but could 
still be a viable alternative, compared to the resource utilization of collecting too much.}
\par \pard\plain \ltrpar\s21\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\rtlch\af1\afs24\lang255\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Configuring JMX}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 Configuring JMX collection is currently more difficult than perfmon. It requires programming. There are though the predefined jmx-java-6 function, which collects interesting metrics about memory, garbage collection and threads.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f5\fs21\lang1033\i0\b0 It collects used memory for each memory region.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af5\afs21\lang255\ltrch\dbch\af5\langfe255\hich\f6\fs21\lang1033\loch\f6\fs21\lang1033 {\rtlch \ltrch\loch\f6\fs21\lang1033\i0\b0 It collects accumulated collection duration, number of collections, for each GC. There are usually 2 collectors running in a JVM. It collects memory utilization immediately before and after a GC for each memory region.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs21\lang255\ltrch\dbch\af4\langfe255\hich\f6\fs21\lang1033\loch\f6\fs21\lang1033 {\rtlch \ltrch\loch\f6\fs21\lang1033\i0\b0 It collects CPU time, blocked count and wait count for every thread. If thread contention monitoring is enabled, both waited time and blocked time will be collected too.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af5\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f5\fs21\lang1033\loch\f5\fs21\lang1033 {\rtlch \ltrch\loch\f6\fs21\lang1033\i0\b0 Adding a new JVM to be monitored, simply involves adding a form like below, to the serve form in the configuration file. Below \'81\'67Java2D\'81\'68 is the user defined name of the JVM, which will be used to refer to the JVM instance. \'81\'67ladmi2338\'81\'68 is the remote host, an
d 3031 is the remote port where JMX serves.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af4\afs16\lang255\ltrch\dbch\af4\langfe255\hich\f4\fs16\lang1033\loch\f4\fs16\lang1033 {\rtlch \ltrch\loch\f4\fs16\lang1033\i0\b0 fn [] (jmx-java6 "Java2D" \line \tab    "ladmi2338" \line \tab    3031 \line \tab    (fn [] \line \tab      (sleepSeconds interval stop-signal)\line \tab      @stop-signal)))}
\par }