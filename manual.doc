{\rtf1\ansi\deff1\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset128 Times New Roman;}{\f1\fswiss\fprq0\fcharset0 Arial;}{\f2\froman\fprq2\fcharset128 Times New Roman;}{\f3\froman\fprq0\fcharset0 Times New Roman;}{\f4\fswiss\fprq2\fcharset128 Arial;}{\f5\fswiss\fprq0\fcharset0 Arial;}{\f6\fmodern\fprq1\fcharset0 Courier New;}{\f7\fmodern\fprq1\fcharset128 Courier New;}{\f8\fnil\fprq1\fcharset128 Courier 10 Pitch;}{\f9\fswiss\fprq2\fcharset128 DejaVu Sans;}{\f10\fnil\fprq0\fcharset128 Lohit Hindi;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033\snext1 Normal;}
{\s2\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af4\afs28\lang1081\ltrch\dbch\af9\langfe255\hich\f4\fs28\lang1033\loch\f4\fs28\lang1033\sbasedon1\snext3 Heading;}
{\s3\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033\sbasedon1\snext3 Body Text;}
{\s4\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033\sbasedon3\snext4 List;}
{\s5\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af10\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext5 caption;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033\sbasedon1\snext6 Index;}
{\s7\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext7 caption;}
{\s8\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext8 WW-caption;}
{\s9\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext9 WW-caption1;}
{\s10\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext10 WW-caption11;}
{\s11\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext11 WW-caption111;}
{\s12\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext12 WW-caption1111;}
{\s13\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext13 WW-caption11111;}
{\s14\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext14 WW-caption111111;}
{\s15\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext15 WW-caption1111111;}
{\s16\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext16 WW-caption11111111;}
{\s17\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext17 WW-caption111111111;}
{\s18\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af3\afs24\lang1081\ai\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\i\loch\f3\fs24\lang1033\i\sbasedon1\snext18 WW-caption1111111111;}
{\s19\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 1;}
{\s20\li1440\ri0\lin1440\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 2;}
{\s21\li2160\ri0\lin2160\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 3;}
{\s22\li2880\ri0\lin2880\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 toc 4;}
{\s23\cf0\tx431{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon24\snext1 Numbered Heading 1;}
{\s24\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs34\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs34\lang1033\b\loch\f1\fs34\lang1033\b\sbasedon1\snext1 heading 1;}
{\s25\cf0\tx431{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon26\snext1 Numbered Heading 2;}
{\s26\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs28\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b\sbasedon1\snext1 heading 2;}
{\s27\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Square List;}
{\s28\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 Lower Roman List;}
{\s29\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Diamond List;}
{\s30\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Numbered List;}
{\s31\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Triangle List;}
{\s32\cf0\tx431{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon33\snext1 Numbered Heading 3;}
{\s33\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b\sbasedon1\snext1 heading 3;}
{\s34\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Dashed List;}
{\s35\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon30\snext1 Upper Roman List;}
{\s36\sb440\sa60\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b\sbasedon1\snext1 heading 4;}
{\s37\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Heart List;}
{\s38\sb240\sa119\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs32\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs32\lang1033\b\loch\f1\fs32\lang1033\b\sbasedon1\snext1 Contents Header;}
{\s39\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon30\snext1 Upper Case List;}
{\s40\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Bullet List;}
{\s41\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Hand List;}
{\s42\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Tick List;}
{\s43\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon30\snext1 Lower Case List;}
{\s44\li1440\ri1440\lin1440\rin1440\fi0\sa119\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon1\snext1 Block Text;}
{\s45\cf0\tx1584{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon23\snext1 Section Heading;}
{\s46\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Implies List;}
{\s47\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Box List;}
{\s48\li720\ri0\lin720\rin0\fi-430\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\snext1 Star List;}
{\s49\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af6\afs24\lang1081\ltrch\dbch\af6\langfe255\hich\f6\fs24\lang1033\loch\f6\fs24\lang1033\sbasedon1\snext1 Plain Text;}
{\s50\cf0\tx1584{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang1033\loch\fs24\lang1033\sbasedon23\snext1 Chapter Heading;}
{\s51\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\rtlch\af4\afs32\lang1081\ab\ltrch\dbch\af9\langfe255\hich\f4\fs32\lang1033\b\loch\f4\fs32\lang1033\b\sbasedon2\snext51 Contents Heading;}
{\*\cs53\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 Endnote Symbol;}
{\*\cs54\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033\sbasedon55 Endnote Text;}
{\*\cs55\cf0\rtlch\af3\afs24\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs24\lang1033\loch\f3\fs24\lang1033 Normal;}
{\*\cs56\cf0\rtlch\af1\afs20\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033 Reference;}
{\*\cs57\cf0\rtlch\af1\afs20\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033 WW-Reference;}
{\*\cs58\cf0\rtlch\af1\afs20\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033\sbasedon55 Footnote Text;}
{\*\cs59\cf0\rtlch\af1\afs20\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs20\lang1033\loch\f1\fs20\lang1033 WW-Reference1;}
{\*\cs60\rtlch\afs24\lang1081\ltrch\dbch\langfe2052\hich\fs24\lang1033\loch\fs24\lang1033 WW-Endnote Symbol;}
{\*\cs61\cf2\ul\ulc0\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang255\loch\fs24\lang255 Internet link;}
{\*\cs62\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 WW-Endnote Symbol1;}
{\*\cs63\cf2\ul\ulc0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 WW-Internet link;}
{\*\cs64\rtlch\afs24\lang1081\ltrch\dbch\langfe2052\hich\fs24\lang1033\loch\fs24\lang1033 WW-Endnote Symbol12;}
{\*\cs65\cf2\ul\ulc0\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang255\loch\fs24\lang255 WW-Internet link1;}
{\*\cs66\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 WW-Endnote Symbol123;}
{\*\cs67\cf2\ul\ulc0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 WW-Internet link12;}
{\*\cs68\rtlch\afs24\lang1081\ltrch\dbch\langfe2052\hich\fs24\lang1033\loch\fs24\lang1033 WW-Endnote Symbol1234;}
{\*\cs69\cf2\ul\ulc0\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang255\loch\fs24\lang255 WW-Internet link123;}
{\*\cs70\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 WW-Endnote Symbol12345;}
{\*\cs71\cf2\ul\ulc0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 WW-Internet link1234;}
{\*\cs72\rtlch\afs24\lang1081\ltrch\dbch\langfe2052\hich\fs24\lang1033\loch\fs24\lang1033 WW-Endnote Symbol123456;}
{\*\cs73\cf2\ul\ulc0\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang255\loch\fs24\lang255 WW-Internet link12345;}
{\*\cs74\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 WW-Endnote Symbol1234567;}
{\*\cs75\cf2\ul\ulc0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 WW-Internet link123456;}
{\*\cs76\rtlch\afs24\lang1081\ltrch\dbch\langfe2052\hich\fs24\lang1033\loch\fs24\lang1033 WW-Endnote Symbol12345678;}
{\*\cs77\cf2\ul\ulc0\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang255\loch\fs24\lang255 WW-Internet link1234567;}
{\*\cs78\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 WW-Endnote Symbol123456789;}
{\*\cs79\cf2\ul\ulc0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 WW-Internet link12345678;}
{\*\cs80\rtlch\afs24\lang1081\ltrch\dbch\langfe2052\hich\fs24\lang1033\loch\fs24\lang1033 WW-Endnote Symbol12345678910;}
{\*\cs81\cf2\ul\ulc0\rtlch\afs24\lang1081\ltrch\dbch\langfe255\hich\fs24\lang255\loch\fs24\lang255 WW-Internet link123456789;}
{\*\cs82\cf0\rtlch\af1\afs24\lang1081\ltrch\dbch\af1\langfe2052\hich\f1\fs24\lang1033\loch\f1\fs24\lang1033 Endnote Symbol;}
{\*\cs83\cf2\ul\ulc0\rtlch\af1\afs24\lang255\ltrch\dbch\af1\langfe255\hich\f1\fs24\lang255\loch\f1\fs24\lang255 Internet link;}
}
{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment StarWriter}{\vern3200}}\deftab720
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Standard;}
{\pgdsc1\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt1 Endnote;}}
{\*\pgdscno0}\paperh15840\paperw12240\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\pgwsxn12240\pghsxn15840\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnar
\pard\plain \ltrpar\s24\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs34\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs34\lang1033\b\loch\f1\fs34\lang1033\b {\rtlch \ltrch\loch\f1\fs34\lang1033\i0\b Manual Monitor}
\par \pard\plain \ltrpar\s26\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs28\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b {\rtlch \ltrch\loch\f1\fs28\lang1033\i0\b Overview}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor, {a suitable }name is not yet {invented}, is a application life cycle monitor, with emphasize on performance metrics.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 This means that the monitor is {used} to collect metrics, for longer periods in production like environments, with very low intrusive overhead. {And} that the metrics are to be used to analyze performance issues.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor consists of a central server process, acting as a database, and a set of agents that collect metrics from the environment. Users can connect to the server process and retrieve graphs of stored metrics,  correlate with other metrics and other pe
riods of time. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 This is still a work in progress, and a stable release has not been released.  This does also utilize a berkeley database that is tied to the SleepyCat {O}racle license. This means that you can't use or embed this as a commercial product. {You are free to ana
lyze commercial products. }}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor is mainly developed in Clojure, some Java and some C#.}
\par \pard\plain \ltrpar\s26\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs28\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b {\rtlch \ltrch\loch\f1\fs28\lang1033\i0\b Installation and Configuration}
\par \pard\plain \ltrpar\s33\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe2052\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The Monitor software is self contained and consists of the monitor.jar, a configuration file, {and windows executable}. An example configuration conf.clj is provided. The monito{r consists of a }central process for the monitoring, act{ing} as a database. It util
izes a number of agents to collect metrics from various locations, like Java processes, Linux kernel and Windows operating system.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Monitor require at least Java SE 6, which can be downloaded from:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0\cf2\ul\ulc0\rtlch\ltrch\hich\f1\fs24\lang255\loch\f1\fs24\lang255{\field{\*\fldinst HYPERLINK "http://java.sun.com/javase/downloads/widget/jdk6.jsp" }{\fldrslt \*\cs83\cf2\ul\ulc0\rtlch\ltrch\dbch\hich\f1\fs24\lang255\loch\f1\fs24\lang255 http://java.sun.com/javase/downloads/widget/jdk6.jsp}}}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Common for all Monitor software except the client user interface, and the Telnet Perfmon Service is that {each} by default create a small control user interface, from which you can stop the process gracefully. This user interface can be eliminated by setting
 java.awt.headless property to true. In headless mode you can terminate gracefully using JMX. Termination is also possible by creating specially named files in the user home directory.}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor server}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor server acts as a database which store metrics for a number of days. It acts as the central for all agents running within the environment, collecting metrics from each one of them. It acts as a server for users and their user interfaces. The mon
itor server is configured using a configuration file, which is a {C}lojure program. The configuration file executes a set of agent connection definitions prior to calling the server. You configure the server by altering the agent connections you need. The fo
llowing snippet is a minimal example configuration..}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b (ns conf (:use monitor.monitor))\line (remote-jmx localhost 4041)\line (linux-proc localhost 4042)\line (in-env 100 "db" 3030)}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The first line is required and instructs the {C}lojure program that it is named {\rtlch\ltrch\dbch\hich\b\loch\b conf}, and that it uses functions defined in the name space {\rtlch\ltrch\dbch\hich\b\loch\b monitor.monitor}. The latter is the interface towards the monitor server. Functions used in the configuration are define
d in name space {\rtlch\ltrch\dbch\hich\b\loch\b monitor.monitor}.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The second line instructs the monitor server to collect metrics from a jmx agent found on localhost, that are listening on TCP port 4041.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The third line instructs the monitor server to collect metrics from a linux kernel agent, on {\rtlch\ltrch\dbch\hich\b\loch\b localhost}, listening on TCP port {\rtlch\ltrch\dbch\hich\b\loch\b 4042}.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The last line instructs the monitor server to execute in an environment where data is kept for {\rtlch\ltrch\dbch\hich\b\loch\b 100} days, in a database called \'93{\rtlch\ltrch\dbch\hich\b\loch\b db}\'94, and that user interface clients are welcome to connect to {TCP }port {\rtlch\ltrch\dbch\hich\b\loch\b 3030}.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The configuration file is a simple clojure program, and clojure programmers are free to create more advanced configurations, as the configuration simply is a clojure program. The function {\rtlch\ltrch\dbch\hich\b\loch\b in-env} won't return until the monitor server is terminated.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The function{\rtlch\ltrch\dbch\hich\b\loch\b  in-env }has an additional {and optional }integer parameter which define the RMI port used by the client. This additional parameter is useful when the monitor server is behind a firewall that has been configured with opened ports.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The database name \'93{\rtlch\ltrch\dbch\hich\b\loch\b db}\'94 is a directory in current working directory, that will be used to store data. This directory is exclusive for each monitor server. {C}oncurrent monitor servers {have to }use different directories.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor server can be gracefully shutdown by creating the file{\rtlch\ltrch\dbch\hich\b\loch\b  ~/.shutdownmonitor}}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitoring JMX}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Java processes are monitored using JMX. The agent is contained in the monitor jar, and is started with jmx as the first java command line argument. The rest of the arguments should be listener port, on which the agent should listen for the monitor process,
 followed by pairs of application names and their corresponding JMX port. An application name is a constant string that the user uses to identify a process, independent of how many times it has been executed. If your system consists of a web server and a b
ack end data store, suitable application names ought to be web and datastore. Alternatively, {i}f there is only additional argument to jmx, that argument should correspond to a file, containing the rest of the command line arguments. Any line beginning with 
a {semi colon, }{\rtlch\ltrch\dbch\hich\b\loch\b ;}, in that file is considered a comment.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Example of a jmx agent command line, which  monitor JMX metrics of processes exposing their platform MbeanServers to port {\rtlch\ltrch\dbch\hich\b\loch\b 3901} and {\rtlch\ltrch\dbch\hich\b\loch\b 3902}. We call these processes web and datastore.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b java -jar Monitor.jar jmx 4041 web 3901 datastore 3902 }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The following example of a jmx agent command line, which monitor JMX metrics defined within a file.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b java -jar Monitor.jar jmx configFile}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The {file }{\rtlch\ltrch\dbch\hich\b\loch\b configFile} ought to include the following lines, if the same processes as the example above is to be monitored.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b 4041\line web 3901\line datastore 3902}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 In the server configuration file, you define the connection to the jmx agent using the {\rtlch\ltrch\dbch\hich\b\loch\b remote-jmx }funktion call, wich takes the arguments host name and port. If you e.g. have a agent running on your {\rtlch\ltrch\dbch\hich\b\loch\b localhost} on port {\rtlch\ltrch\dbch\hich\b\loch\b 4041}, you need a line like ({\rtlch\ltrch\dbch\hich\f7\b\loch\f7\b jmx-remote 
\'81\'67localhost\'81\'68 4041)} in your configuration file.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Java processes may be monitored, using JMX, from the monitor server directly, without a JMX agent. This will not work sufficient through firewalls, since JMX uses RMI over random TCP ports. Using the monitor server directly is however easier when firewalls
 aren't an issue. Direct JMX is configured using the {\rtlch\ltrch\dbch\hich\b\loch\b java6-jmx} function call, witch takes the three arguments name, host and port. A call in the configuration file might look like{\rtlch\ltrch\dbch\hich\f7\b\loch\f7\b  (java6-jmx web localhost 3901)}}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The jmx agent can be gracefully shutdown by creating the file {\rtlch\ltrch\dbch\hich\b\loch\b ~/.shutdownjmxprobe}}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor Linux kernel}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor contain a linux kernel agent, which scans the linux proc file system for metrics. The Linux agent is started when the first java command line argument is linux. The other command line {arguments} are TCP port  and a regular expression, defining m
atches of command lines of those processes you need additional metrics from. An example would be:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b java -jar Monitor.jar linux 4042 java}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 This command line would create a linux kernel agent that listens on port {\rtlch\ltrch\dbch\hich\b\loch\b 4042}, and fetches additional metrics from processes which contain the string \'93{\rtlch\ltrch\dbch\hich\b\loch\b java}\'94 in their command lines.  That is the linux agent will emit process metrics for all java processes, 
since these have the text java in their command line.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The linux kernel agent can be gracefully shutdown by creating the file {\rtlch\ltrch\dbch\hich\b\loch\b ~/.shutdownlinuxprobe}}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor user interface}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The user interface is also contained in the Monitor.jar file, and is started without {any }java command line arguments. The user interface is a Swing application, that communicate with the Monitor server using RMI.  Alternativly you can start the user interf
ace by applying the arguments {\rtlch\ltrch\dbch\hich\b\loch\b gui} followed by the host and port that direct you to a particular server.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Its possible to prevent the JVM from terminating when the user interface is closed, by setting the system property {\rtlch\ltrch\dbch\hich\b\loch\b stayalive} to true.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The Monitor.jar file does not have to be the very same instance as the server process. You can distribute a copy of the jar file to any client machine. It does not require the configuration file either. }
\par \pard\plain \ltrpar\s33\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Telnet perfmon service}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Telnet perfmon service is a small windows service, that collects perfmon metrics from windows hosts. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The Telnet perfmon service require .NET 3.5 Runtime, which can be downloaded from: }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0\cf2\ul\ulc0\rtlch\ltrch\hich\f1\fs24\lang255\loch\f1\fs24\lang255{\field{\*\fldinst HYPERLINK "http://www.microsoft.com/downloads/details.aspx?FamilyID=333325fd-ae52-4e35-b531-508d977d32a6" }{\fldrslt \*\cs83\cf2\ul\ulc0\rtlch\ltrch\dbch\hich\f1\fs24\lang255\loch\f1\fs24\lang255 http://www.microsoft.com/downloads/details.aspx?FamilyID=333325fd-ae52-4e35-b531-508d977d32a6}}}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\af6\langfe255\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033 {\rtlch \ltrch\loch\f2\fs21\lang1033\i0\b0 To install the Telner perfmon service you simply copy the binary PerfmonMonitor.exe to a suitable location, where it will live, and execute it. The process will install itself as a service and start to execute immediately. You unintall the Telnet perfmon s
ervice by executing it with -u as a command line switch. The Telnet perfmon service require administrator privileges. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\af6\langfe255\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033 {\rtlch \ltrch\loch\f2\fs21\lang1033\i0\b0 The Telnet perfmon service does not collect all perfmon metrics found on the computer. {As t}hat {would }be very intrusive. Up on first start, it will create a {\rtlch\ltrch\dbch\hich\b\loch\b categories} file in the same directory as where the binary resides. That is in the executing assembly
 location. This file contain a list of categories that the Telnet perfmon service will collect. You may alter this file, but it requires a restart of the service. Restart is easiest done using the service program.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\af6\langfe255\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033{\*\shppict{\pict\picscalex65\picscaley65\piccropl0\piccropr0\piccropt0\piccropb0\picw575\pich392\picwgoal8625\pichgoal5880\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex65\picscaley65\piccropl0\piccropr0\piccropt0\piccropb0\picw575\pich392\picwgoal8625\pichgoal5880\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql {\rtlch \ltrch\loch\f2\fs21\lang1033\i0\b0 By default the Telnet perfmon service is listening on port {\rtlch\ltrch\dbch\hich\b\loch\b 3434}. This can be altered by altering the command line. The first parameter is the listener port, while the second parameter is the sampling interval. This defaults to every {\rtlch\ltrch\dbch\hich\b\loch\b 15} seconds.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\langfe2052\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033{\*\shppict{\pict\picscalex43\picscaley38\piccropl0\piccropr0\piccropt0\piccropb0\picw417\pich473\picwgoal8338\pichgoal9459\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex43\picscaley38\piccropl0\piccropr0\piccropt0\piccropb0\picw417\pich473\picwgoal8338\pichgoal9459\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f1\fs24\lang1033\i0\b0\rtlch\ltrch\hich\f2\fs21\loch\f2\fs21 The following function is an example configuration for gathering metrics from a windows host.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ab\ltrch\dbch\langfe2052\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch {\*\bkmkstart DDE_LINK} }{\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b (perfmon \'81\'67winmachine\'81\'68 3434\line   \'81\'67Processor|System\'81\'68\line   "User Time|Processor Time|Interrupts/sec|Context Switches/sec\'81\'68)}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\langfe2052\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033 {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f2\fs21\lang1033\i0\b0 {\*\bkmkend DDE_LINK}This function call instructs the monitor to collect metrics from the {\rtlch\ltrch\dbch\hich\b\loch\b Processor} and {\rtlch\ltrch\dbch\hich\b\loch\b System} categories  on host \'81\'67{\rtlch\ltrch\dbch\hich\b\loch\b winmachine}\'81\'68. The counters {\rtlch\ltrch\dbch\hich\b\loch\b User Time},{\rtlch\ltrch\dbch\hich\b\loch\b  Processor Time }and {\rtlch\ltrch\dbch\hich\b\loch\b Interrupts/sec} is collected from {\rtlch\ltrch\dbch\hich\b\loch\b Processor} category, while {\rtlch\ltrch\dbch\hich\b\loch\b Context Switches/sec} is colle
cted from {\rtlch\ltrch\dbch\hich\b\loch\b System} category. The Telnet perfmon service is listening on {default }TCP port {\rtlch\ltrch\dbch\hich\b\loch\b 3434}.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The perfmon call does also contain an additional instance parameters. In order to only collect the total metrics from the Processor category, the call would look like:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ab\ltrch\dbch\langfe2052\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b (perfmon \'81\'67winmachine\'81\'68 3434\line   \'81\'67Processor|System\'81\'68\line   "User Time|Processor Time|Interrupts/sec|Context Switches/sec\'81\'68\line   \'81\'67_Total\'81\'68)}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\langfe2052\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033 {\rtlch \ltrch\loch\f2\fs21\lang1033\i0\b0 The three parameters corresponding {\rtlch\ltrch\dbch\hich\b\loch\b Category}, {\rtlch\ltrch\dbch\hich\b\loch\b Counter} and {\rtlch\ltrch\dbch\hich\b\loch\b Instance} are all regular expressions.}
\par \pard\plain \ltrpar\s26\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs28\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs28\lang1033\b\loch\f1\fs28\lang1033\b {\rtlch \ltrch\loch\f1\fs28\lang1033\i0\b Usage}
\par \pard\plain \ltrpar\s33\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Monitor}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The monitor binary consists of both the client and the server programs. The client is used to connect to the server, which is collecting and storing metrics from defined processes. The client visualizes the data according to the user. The client is started
 by simply clicking on the monitor.jar file from within the explorer or by running the command:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af6\afs21\lang1081\ab\ltrch\dbch\af6\langfe255\hich\f6\fs21\lang1033\b\loch\f6\fs21\lang1033\b {\rtlch \ltrch\loch\f6\fs21\lang1033\i0\b java -jar monitor.jar}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Server}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The server is started by adding "{\rtlch\ltrch\dbch\hich\b\loch\b server}" to the command line, followed by the name of the configuration script. The configuration script is assumed to be located in the same directory as the monitor.jar file.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The configuration script is a clojure program, which starts the server with a set of functions supplied. }
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b User interface}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The user interface is started by running {\rtlch\ltrch\dbch\hich\b\loch\b java -jar monitor}, or by simply clicking on the {\rtlch\ltrch\dbch\hich\b\loch\b monitor.jar} in the file explorer. At start up a analysis window is opened.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The analysis window consists of an empty graph and a empty table, since no data has yet been selected. To connect to the server, you simply chose Connect from the File menu, which brings up the following form, in which you enter the address to the monitor 
server of interest.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\*\shppict{\pict\picscalex60\picscaley60\piccropl0\piccropr0\piccropt0\piccropb0\picw306\pich168\picwgoal4590\pichgoal2520\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex60\picscaley60\piccropl0\piccropr0\piccropt0\piccropb0\picw306\pich168\picwgoal4590\pichgoal2520\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Once connected, you select the fill the graph by selecting Add in the File menu, which brings up a form where you can select data to analyze. First you select the time span containing data of interest. After update has been pressed, the available selection
 criteria for this period shows up. Below is an example where Garbage collection statistics of a process using the Parallel Scavenge Collector is being selected.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\afs21\lang1081\ltrch\dbch\langfe255\hich\fs21\lang1033\loch\fs21\lang1033{\*\shppict{\pict\picscalex54\picscaley54\piccropl0\piccropr0\piccropt0\piccropb0\picw449\pich394\picwgoal6735\pichgoal5910\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex54\picscaley54\piccropl0\piccropr0\piccropt0\piccropb0\picw449\pich394\picwgoal6735\pichgoal5910\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Note that the criteria available is dependent of both the time span, and the criteria currently selected. Here the instance criteria is only showing values available to garbage collection. That is how much memory that was used for a certain generation dire
ctly after the last GC. After pressing the Add button. the corresponding graphs should appear.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af6\afs16\lang1081\ltrch\dbch\af6\langfe255\hich\f6\fs16\lang1033\loch\f6\fs16\lang1033{\*\shppict{\pict\picscalex47\picscaley47\piccropl0\piccropr0\piccropt0\piccropb0\picw899\pich603\picwgoal13485\pichgoal9045\pngblip
89504e470d0a1a0a}}{\nonshppict{\pict\picscalex47\picscaley47\piccropl0\piccropr0\piccropt0\piccropb0\picw899\pich603\picwgoal13485\pichgoal9045\wmetafile8
0100090000036900000010001c0000000000050000000b0200000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000
000000000000040000002d01000007000000fc020000ffffff000000040000002d0101001c000000fb0200000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000040000002d010200040000002e011800050000000902ffffff0004000000070103000700
0000430f2000cc00000000000300000000000000000000000000}}
{\rtlch \ltrch\loch }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The criteria available is dependent of what the server is configured to collect, which in turn is dependent of e.g. the Telnet Perfmon Serv{ice} are configured to collect. The analysis view will only show the criteria available for the selected time span, wh
ile runtime view will only show criteria available during the last hour. The Java 6 JMX related criteria differ from JVM to JVM. Different Garbage collectors does i.e. produce different statistics.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\langfe2052\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 When selecting the time critera, you may also define a shift of start time. When this is selected, all values will be time shifted with difference between time shift specification and start time. This is useful when analyzing behavior over time, since you 
easily can compare values from different periods in the same graph.}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Configuring Telnet Perfmon Service}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Perfmon on windows works with categories, which in turn contain counters and instances. Each time a sample is taken from the OS, a whole category sample is taken. The categories available differ from host to host. Some categories are very large. E.g. the T
hreading category, since a system most often {use} a lot of threads.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Up on first start the telnet perfmon service creates a categories file in the same directory as where the binary reside.  The categories file can be altered to collect other perfmon categories than the default ones. The service has to be restarted after mo
dification.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The next step is to instruct the Monitor server to collect perfmon data. This is done in the server configuration file. Configuration perfmon data is done by filtering, using regular expressions. The following form instructs the monitor to collect perfmon 
metrics from the telnet perfmon service running on {\rtlch\ltrch\dbch\hich\b\loch\b winmachine} and is available  on TCP port {\rtlch\ltrch\dbch\hich\b\loch\b 3434}.This also tells that the Telnet perfmon service should filter out categories matching the {\rtlch\ltrch\dbch\hich\b\loch\b Processor|System }regular expression. Within those Categories we are i
nterested in Counters matching the regular expression {\rtlch\ltrch\hich\f2\loch\f2 "}{\rtlch\ltrch\dbch\hich\f2\b\loch\f2\b User Time|Processor Time|Interrupts/sec|Context Switches/sec}{\rtlch\ltrch\hich\f2\loch\f2 \'81\'68. Within the Processor counter, we want to collect the }{\rtlch\ltrch\dbch\hich\f2\b\loch\f2\b Total}{\rtlch\ltrch\hich\f2\loch\f2  instances, and not each individual processor that the }{\rtlch\ltrch\hich\f2\fs21\loch\f2\fs21 winmachine has, thus the 
\'81\'67}{\rtlch\ltrch\dbch\hich\f2\fs21\b\loch\f2\fs21\b _Total}{\rtlch\ltrch\hich\f2\fs21\loch\f2\fs21 \'81\'68 instance regular expression. The System category does not contain instances, and the \'81\'67}{\rtlch\ltrch\dbch\hich\f2\fs21\b\loch\f2\fs21\b _Total}{\rtlch\ltrch\hich\f2\fs21\loch\f2\fs21 \'81\'68 regular expression wont hence filter any counters from this category.}}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa60\ql\rtlch\af2\afs21\lang1081\ab\ltrch\dbch\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch  }{\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b (perfmon \'81\'67winmachine\'81\'68 3434\line   \'81\'67Processor|System\'81\'68\line   "User Time|Processor Time|Interrupts/sec|Context Switches/sec\'81\'68\line   \'81\'67_Total\'81\'68)}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af2\afs21\lang1081\ltrch\dbch\langfe2052\hich\f2\fs21\lang1033\loch\f2\fs21\lang1033 {\rtlch \ltrch\loch\f2\fs21\lang1033\i0\b0 Use {the }perfmon {windows application }when figuring out which metrics to collect.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\fs21\loch\fs21 While adding more perfmon metrics to yo}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 ur system, you need to write more and more advanced regular expressions that filter out data of interest. The monitor server saves all data collected, and you don't want to fill your database with huge amounts of non 
interesting data. This can be complicated, since different categories might contain counters and instances with same or similar names. It is possible to use multiple perfmon statements to the same Telnet Perfmon Service. This consumes resources, but could 
still be a viable alternative, compared to the resource utilization of collecting too much.}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b JMX Metrics}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Garbage Collection}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The following  Garbage Collection metrics are commonly found by the JMX agent. These are found by selecting category {\rtlch\ltrch\dbch\hich\b\loch\b Garbage Collection}. Java usually utilize generational heaps, managed concurrently by different collectors. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 In garbage collection metrics, you select heap using the {\rtlch\ltrch\dbch\hich\b\loch\b instance} field, and collector using the {\rtlch\ltrch\dbch\hich\b\loch\b section} field. Names vary with JVM, but in section there is a element called {\rtlch\ltrch\dbch\hich\b\loch\b Latest} with selects the latest statistics independently of collector.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Usually there are a number of spaces named something like young, eden and survivor that is managed by young collector. The young collector is usually named something like scavenge, new or young. Most old generation collector does collect in both young and 
old generations. The CMS collector does not. Two other spaces are commonly of interest Permanent space and Code Cache. Permanent Space is meant for {objects that should }not {be} collected. This space contain meta data of various kinds. It is usually heavily u
sed and might have to be increased manually if the application generate code {in runtime}. Code Cache is used by the JIT compiler, and contain native code. The JIT won't be able to compile if this space becomes full.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Its important to understand that these values are snapshots, and reflect only the last GC event. Many {collections }might have occurred between two snapshots. Consult the {\rtlch\ltrch\dbch\hich\b\loch\b Count} metric.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Committed After Last}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0   \'96 Is a metric that tells how much memory the JVM has allocated for a particular Heap. This metric can be displayed in absolute values or percent of maximum heap allowed. If committed is very close to maximum you may be close to runnin
g out of memory. However, {a }perfect system does utilize all memory, without running out of memory. Note also that the maximum heap allowed can change through time on modern JVMs. The heap size is normally altered by the garbage collector. This metric shows
 the value after the last garbage collection.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Max After Last}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0   \'96 Is a metric that shows the maximum allowed heap after a garbage collection. This value may change over time on modern JVMs..}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Usage}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0   \'96 Is a metric that shows the current heap in use. That is, heap that is filled with data. This metric can be shown as usage immediately before the last garbage collection, immediately after the last garbage collection, or percent of committed heap a
fter the last garbage collection. The two latter is the most interesting metrics in order to understand how much memory the JVM is utilizing. That is, how much data there are after garbage has been reclaimed. Looking at usage before and after on both young
 and old generation might give you a indication of your propagation rate. A high propagation rate, and frequent collection in old space is an indication that objects get propagated prematurely.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Count}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0   \'96 Is a metric that tells how many collections a particular collector has performed.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b Last Duration and Time}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96  {Are} metrics that tell how long time the last collection to{o}k, and accumulated collection  time. Low number are desirable, {since most collectors will freeze your application threads during collection.}}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Memory}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The memory counters reflect snapshots of memory regions.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Heap used }}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 \'96 These metrics show the current over all heap utilization. That is the amount of memory occupied by objects. This metric can be shown as absolute value or in percent of  maximum allowed.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Heap committed }}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 - These metrics reflect snapshots of heap size. That is, heap memory allocated by the JVM. This metric can be shown as absolute value or in percent of maximum allowed.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Non heap }}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 \'96  These metrics reflect snapshots of non heap memory usage. It's not very well specified what this memory is used for. It's internal for the JVM. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Usage}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96  These metrics reflect snapshots of heap utilization of each heap space.}
\par \pard\plain \ltrpar\s33\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Linux Metrics}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The linux probe collects different metrics dependent of kernel version. Some important are:}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b CPU}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b user}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 , {\rtlch\ltrch\hich\b\loch\b system}, {\rtlch\ltrch\hich\b\loch\b idle}, {\rtlch\ltrch\hich\b\loch\b iowait}, {\rtlch\ltrch\hich\b\loch\b irq}, {\rtlch\ltrch\hich\b\loch\b softirq} \'96 These metrics tell the cpu utilization of the OS. User is time spent in user mode. That is time spent by applications. System is kernel time. High value indicate Locking, or IO issues. Idle, time spent doing nothi
ng. Iowait is time spent waiting on IO. Irq, and softirq is time spent  handling interrupts.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The above values are percent of total, that is the value 100 mean that all CPU are fully occupied.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Context switches/s}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  and {\rtlch\ltrch\hich\b\loch\b interrupts/s} is metrics telling the average number of context switches and interrupts made per second. Context switches is the rate in witch threads get attention by the scheduler. There are many reasons for this. Memory barriers, IO
 events, yielding and  others. Interrupts is the rate in with interrupts are handled. If the function of context switches and interrupts starts to deviate, you are experiencing exhaustion. Often lock contention.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 If the linux agent is monitoring processes, the {\rtlch\ltrch\hich\b\loch\b system}, {\rtlch\ltrch\hich\b\loch\b total}, and {\rtlch\ltrch\hich\b\loch\b user} metrics will be collected. System is time spent in kernel and while user is time spent in user, and total is all time spent in the process.}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Memory}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The linux agent will likely provide the following metrics in the memory category:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b physical used,}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  {\rtlch\ltrch\hich\b\loch\b physical free and % available} \'96 Amount of RAM currently used, and amount of RAM currently free. Note that Linux usually spend most of the physical memory available for disk cache. That is to reduce I/O. That means that physical free usually 
is a lot less than what actually is available for use. {The }% available reflect percent of memory available for allocation, including memory currently used as cache.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Counters {\rtlch\ltrch\hich\b\loch\b cache and} {\rtlch\ltrch\hich\b\loch\b % cache}\'96 Cache reflects the amount of memory that is used as disk cache, and % cache reflect the cache percentage of all physical memory. Cache include cache of swap and buffers.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b swap used}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 , {\rtlch\ltrch\hich\b\loch\b % swap}, {\rtlch\ltrch\hich\b\loch\b % swaped} \'96 Reflect amount of swap used, percent of swap used, and percent of all memory dedicated {to }swap. The latter include the whole RAM and swap space.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Per process counters are:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b resident }}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 \'96 Amount of RAM used by this process. Includes both shared and private pages.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b swapped}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96 Amount of memory swapped out for this process. Includes both shared and private pages.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b private}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96 Amount of memory exclusively used by this process. Includes both resident and swapped pages.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b shared}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96 Amount of shared memory used by this process. Includes both resident and swapped pages.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b proportional}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96 Amount of memory proportionally used by this process. The size of each shared page is divided the number of processes sharing it.}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Disk }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Written kB/s}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  , {\rtlch\ltrch\hich\b\loch\b read kB/s }\'96 Reflects the average number of kilo bytes written and read from disk per second.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Writes/s}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  , {\rtlch\ltrch\hich\b\loch\b reads/s }\'96 Reflects the physical number of write and read operations performed per second. A merged write is viewed as a single write. It is effective to transfer a lot of data in few operations.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Queue}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0   \'96 Reflects the number of queued disk operations.}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Network device}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Received kB/s}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  , {\rtlch\ltrch\hich\b\loch\b sent kB/s} \'96 Reflects the number of kilo bytes received and sent on the network device.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b Received packets/s}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  , {\rtlch\ltrch\hich\b\loch\b Sent packets/s} \'96 Reflects the number of packets sent or received on the network device. It is effective to transfer a lot of data in few packets.}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Descriptors}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\hich\b\loch\b All}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0   and {\rtlch\ltrch\hich\b\loch\b % All}\'96 The number of file descriptors each monitored process is having opened, and % of maximum. That is the soft file descriptor limit.}
\par \pard\plain \ltrpar\s36\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb440\sa60\ql\rtlch\af1\afs21\lang1081\ab\ltrch\dbch\af1\langfe255\hich\f1\fs21\lang1033\b\loch\f1\fs21\lang1033\b {\rtlch \ltrch\loch\f1\fs21\lang1033\i0\b Thread monitoring on Java}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Its possible to perform basic thread monitoring of Java processes through JMX. Many server side Java processes contain a huge number of threads, so to prevent intrusiveness, threads aren't monitored using the JMX agent, {since the agent is meant to run cont
inuously.} There is however a thread monitoring tool provided in monitor, that may be used to monitor threads temporarily. }
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 Thread monitoring can either be done by a direct connection to the server, or by creating a file, that is later imported into the server. The latter is useful if the monitored process resides behind a firewall or if  you don't want to be intrusive on the n
etwork while the threads monitoring is in progress.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 To monitor with a direct connection to the server you issue the command}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b java -jar monitor.jar threads <name> <jmx-host> <jmx-port> <server-host> <server-port>}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 where {\rtlch\ltrch\dbch\hich\b\loch\b name} is the name of the java application, {\rtlch\ltrch\dbch\hich\b\loch\b jmx host} and {\rtlch\ltrch\dbch\hich\b\loch\b port} is the connection to the jmx agent running within the java process, and {\rtlch\ltrch\dbch\hich\b\loch\b server host} and {\rtlch\ltrch\dbch\hich\b\loch\b port} is the connection used to connect to the server. The later is the very same parameters used to co
nnect to the monitor server using the user interface.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 The default metrics you ought get is:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b CPU Time  }}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 - The CPU time spent by the thread.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b CPU Time User}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  {\'96} The CPU time spent by the thread in User mode.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b Blocked Count}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96  The number of times the thread has been blocked on a Object monitor.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b Waited Count}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96  The number of time the thread has been waiting on a Object monitor.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 You may instruct the j{vm} to provide the additional metrics:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b Blocked Time}}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0  \'96  The accumulated time the thread has been blocked on a Object monitor. That is, the time the Thread has been blocked on a synchronized statement.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0{\rtlch\ltrch\dbch\hich\b\loch\b Waited Time }}{\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 \'96  The accumulated time the thread has been waiting on a monitor. That is, the time the Thread has been waiting on Object.wait.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 These counters are enabled by setting the a jmx attribute ThreadContentionMonitoringEnabled in the Threading MBean to true. Gathering data for th{ese} metrics is {intrusive} on the jvm, and is hence usually disabled by default. You can use e.g. JConsole to tur
n on thread contention monitoring.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 To collect Java Thread metrics  into a file use the following command:}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b java -jar Monitor.jar threadsfile <name> <jmx-host> <jmx-port> <file> <seconds-per-sample>}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 where {\rtlch\ltrch\dbch\hich\b\loch\b file} is the path to the file that the metrics is written to, and {\rtlch\ltrch\dbch\hich\b\loch\b seconds-per-sample} is the sample interval in seconds.}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 {\rtlch \ltrch\loch\f3\fs21\lang1033\i0\b0 To import a file with thread metrics, you use the following command}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ab\ltrch\dbch\af3\langfe255\hich\f7\fs21\lang1033\b\loch\f7\fs21\lang1033\b {\rtlch \ltrch\loch\f7\fs21\lang1033\i0\b java -jar monitor.jar importthreadsfile <file> <server-host> <server-port>}
\par \pard\plain \ltrpar\s1\cf0\sl240\slmult1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\ql\rtlch\af3\afs21\lang1081\ltrch\dbch\af3\langfe255\hich\f3\fs21\lang1033\loch\f3\fs21\lang1033 
\par }